
XC8Application1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000002b6  0000034a  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000034a  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000040  00000000  00000000  00000379  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000c5c  00000000  00000000  000003b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000897  00000000  00000000  00001015  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000035f  00000000  00000000  000018ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000098  00000000  00000000  00001c0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000027d  00000000  00000000  00001ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000002a5  00000000  00000000  00001f21  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000030  00000000  00000000  000021c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000002a8  000002a8  0000033c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000021f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.hienthi 00000082  000000f0  000000f0  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.clearled 0000002c  000001e2  000001e2  00000276  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.init_intr 0000000c  0000029c  0000029c  00000330  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__vector_16 00000070  00000172  00000172  00000206  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    00000020  0000025e  0000025e  000002f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .bss.i        00000002  0080010a  0080010a  0000034a  2**0
                  ALLOC
 19 .bss.count    00000002  0080010c  0080010c  0000034a  2**0
                  ALLOC
 20 .data.led     0000000a  00800100  000002ac  00000340  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 21 .text.libgcc.div 00000028  0000020e  0000020e  000002a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.libgcc.mul 0000001e  0000027e  0000027e  00000312  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.libgcc.div 00000028  00000236  00000236  000002ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
   4:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
   8:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
   c:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  10:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  14:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  18:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  1c:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  20:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  24:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  28:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  2c:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  30:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  34:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  38:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  3c:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  40:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_16>
  44:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  48:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  4c:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  50:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  54:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  58:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  5c:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  60:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  64:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  68:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  6c:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  70:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  74:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  78:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  7c:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  80:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  84:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>
  88:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 0a       	sbc	r0, r17
  90:	00 02       	muls	r16, r16
  92:	ac 01       	movw	r20, r24
  94:	0a 01       	movw	r0, r20
  96:	0e 80       	ldd	r0, Y+6	; 0x06

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e1       	ldi	r29, 0x10	; 16
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	ec e8       	ldi	r30, 0x8C	; 140
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	19 c0       	rjmp	.+50     	; 0xde <__do_clear_bss+0x8>
  ac:	b7 91       	elpm	r27, Z+
  ae:	a7 91       	elpm	r26, Z+
  b0:	37 91       	elpm	r19, Z+
  b2:	27 91       	elpm	r18, Z+
  b4:	07 91       	elpm	r16, Z+
  b6:	07 fd       	sbrc	r16, 7
  b8:	0e c0       	rjmp	.+28     	; 0xd6 <__do_clear_bss>
  ba:	97 91       	elpm	r25, Z+
  bc:	87 91       	elpm	r24, Z+
  be:	ef 01       	movw	r28, r30
  c0:	f9 2f       	mov	r31, r25
  c2:	e8 2f       	mov	r30, r24
  c4:	0b bf       	out	0x3b, r16	; 59
  c6:	07 90       	elpm	r0, Z+
  c8:	0d 92       	st	X+, r0
  ca:	a2 17       	cp	r26, r18
  cc:	b3 07       	cpc	r27, r19
  ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x22>
  d0:	fe 01       	movw	r30, r28
  d2:	1b be       	out	0x3b, r1	; 59
  d4:	04 c0       	rjmp	.+8      	; 0xde <__do_clear_bss+0x8>

000000d6 <__do_clear_bss>:
  d6:	1d 92       	st	X+, r1
  d8:	a2 17       	cp	r26, r18
  da:	b3 07       	cpc	r27, r19
  dc:	e1 f7       	brne	.-8      	; 0xd6 <__do_clear_bss>
  de:	e8 39       	cpi	r30, 0x98	; 152
  e0:	f4 07       	cpc	r31, r20
  e2:	21 f7       	brne	.-56     	; 0xac <__do_copy_data+0x8>
  e4:	0e 94 2f 01 	call	0x25e	; 0x25e <main>
  e8:	0c 94 76 00 	jmp	0xec	; 0xec <_exit>

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>

Disassembly of section .text:

000002a8 <__bad_interrupt>:
 2a8:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.hienthi:

000000f0 <hienthi>:
unsigned char led[10]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
int count=0;
int i = 0;
	
void hienthi(unsigned int x)
{
  f0:	fc 01       	movw	r30, r24
	uint16_t temp, ch, dv;
	temp = x;
	dv = temp%10;
  f2:	9c 01       	movw	r18, r24
  f4:	ad ec       	ldi	r26, 0xCD	; 205
  f6:	bc ec       	ldi	r27, 0xCC	; 204
  f8:	0e 94 3f 01 	call	0x27e	; 0x27e <__umulhisi3>
  fc:	ac 01       	movw	r20, r24
  fe:	56 95       	lsr	r21
 100:	47 95       	ror	r20
 102:	56 95       	lsr	r21
 104:	47 95       	ror	r20
 106:	56 95       	lsr	r21
 108:	47 95       	ror	r20
 10a:	ca 01       	movw	r24, r20
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	44 0f       	add	r20, r20
 112:	55 1f       	adc	r21, r21
 114:	44 0f       	add	r20, r20
 116:	55 1f       	adc	r21, r21
 118:	44 0f       	add	r20, r20
 11a:	55 1f       	adc	r21, r21
 11c:	48 0f       	add	r20, r24
 11e:	59 1f       	adc	r21, r25
 120:	cf 01       	movw	r24, r30
 122:	84 1b       	sub	r24, r20
 124:	95 0b       	sbc	r25, r21
 126:	ac 01       	movw	r20, r24
	temp=temp/10;
 128:	0e 94 3f 01 	call	0x27e	; 0x27e <__umulhisi3>
 12c:	96 95       	lsr	r25
 12e:	87 95       	ror	r24
 130:	96 95       	lsr	r25
 132:	87 95       	ror	r24
 134:	96 95       	lsr	r25
 136:	87 95       	ror	r24
	ch=temp;
	
	// hien thi led 1
	PORTB=0x00; // chan B0 B1 Xuat ra 0V
 138:	18 ba       	out	0x18, r1	; 24
	PORTB=0x01; // Chan B0 xuat ra 5V
 13a:	21 e0       	ldi	r18, 0x01	; 1
 13c:	28 bb       	out	0x18, r18	; 24
	PORTA = led[ch];
 13e:	fc 01       	movw	r30, r24
 140:	e0 50       	subi	r30, 0x00	; 0
 142:	ff 4f       	sbci	r31, 0xFF	; 255
 144:	80 81       	ld	r24, Z
 146:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 148:	8f ec       	ldi	r24, 0xCF	; 207
 14a:	97 e0       	ldi	r25, 0x07	; 7
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <hienthi+0x5c>
 150:	00 c0       	rjmp	.+0      	; 0x152 <hienthi+0x62>
 152:	00 00       	nop
	_delay_ms(1);
	// hien thi led 2
	PORTB=0x00; // chan B0 B1 Xuat ra 0V
 154:	18 ba       	out	0x18, r1	; 24
	PORTB=0x02; // Chan B1 xuat ra 5V
 156:	82 e0       	ldi	r24, 0x02	; 2
 158:	88 bb       	out	0x18, r24	; 24
	PORTA = led[dv];
 15a:	fa 01       	movw	r30, r20
 15c:	e0 50       	subi	r30, 0x00	; 0
 15e:	ff 4f       	sbci	r31, 0xFF	; 255
 160:	80 81       	ld	r24, Z
 162:	8b bb       	out	0x1b, r24	; 27
 164:	8f ec       	ldi	r24, 0xCF	; 207
 166:	97 e0       	ldi	r25, 0x07	; 7
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <hienthi+0x78>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <hienthi+0x7e>
 16e:	00 00       	nop
 170:	08 95       	ret

Disassembly of section .text.clearled:

000001e2 <clearled>:
}

void clearled()
{
	// hien thi led 1
	PORTB=0x00; // chan B0 B1 Xuat ra 0V
 1e2:	18 ba       	out	0x18, r1	; 24
	PORTB=0x01; // Chan B0 xuat ra 5V
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	88 bb       	out	0x18, r24	; 24
	PORTA = 0xff;
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	8b bb       	out	0x1b, r24	; 27
 1ec:	ef ec       	ldi	r30, 0xCF	; 207
 1ee:	f7 e0       	ldi	r31, 0x07	; 7
 1f0:	31 97       	sbiw	r30, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <clearled+0xe>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <clearled+0x14>
 1f6:	00 00       	nop
	_delay_ms(1);
	// hien thi led 2
	PORTB=0x00; // chan B0 B1 Xuat ra 0V
 1f8:	18 ba       	out	0x18, r1	; 24
	PORTB=0x02; // Chan B1 xuat ra 5V
 1fa:	92 e0       	ldi	r25, 0x02	; 2
 1fc:	98 bb       	out	0x18, r25	; 24
	PORTA = 0xff;
 1fe:	8b bb       	out	0x1b, r24	; 27
 200:	8f ec       	ldi	r24, 0xCF	; 207
 202:	97 e0       	ldi	r25, 0x07	; 7
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <clearled+0x22>
 208:	00 c0       	rjmp	.+0      	; 0x20a <clearled+0x28>
 20a:	00 00       	nop
 20c:	08 95       	ret

Disassembly of section .text.init_intr:

0000029c <init_intr>:
	_delay_ms(1);
}

void init_intr()
{
	TCCR0 = (0<<CS01) | (0<<CS01)| (1<<CS00);
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	83 bf       	out	0x33, r24	; 51
	TIMSK=(1<<TOIE0);
 2a0:	87 bf       	out	0x37, r24	; 55
	TCNT0=0;
 2a2:	12 be       	out	0x32, r1	; 50
	sei();
 2a4:	78 94       	sei
 2a6:	08 95       	ret

Disassembly of section .text.__vector_16:

00000172 <__vector_16>:
}

ISR(TIMER0_OVF_vect)
{
 172:	1f 92       	push	r1
 174:	0f 92       	push	r0
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	0f 92       	push	r0
 17a:	11 24       	eor	r1, r1
 17c:	2f 93       	push	r18
 17e:	5f 93       	push	r21
 180:	6f 93       	push	r22
 182:	7f 93       	push	r23
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
 188:	af 93       	push	r26
 18a:	bf 93       	push	r27
	TCNT0=0;
 18c:	12 be       	out	0x32, r1	; 50
	count++;
 18e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <count>
 192:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <count+0x1>
 196:	01 96       	adiw	r24, 0x01	; 1
 198:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <count+0x1>
 19c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <count>
	if(count > 1000)
 1a0:	89 3e       	cpi	r24, 0xE9	; 233
 1a2:	93 40       	sbci	r25, 0x03	; 3
 1a4:	8c f0       	brlt	.+34     	; 0x1c8 <__vector_16+0x56>
	{
		i++;
 1a6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <i>
 1aa:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <i+0x1>
 1ae:	01 96       	adiw	r24, 0x01	; 1
		i=i%100;
 1b0:	64 e6       	ldi	r22, 0x64	; 100
 1b2:	70 e0       	ldi	r23, 0x00	; 0
 1b4:	0e 94 07 01 	call	0x20e	; 0x20e <__divmodhi4>
 1b8:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <i+0x1>
 1bc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <i>
		count=0;
 1c0:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <count+0x1>
 1c4:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <count>
	}
}
 1c8:	bf 91       	pop	r27
 1ca:	af 91       	pop	r26
 1cc:	9f 91       	pop	r25
 1ce:	8f 91       	pop	r24
 1d0:	7f 91       	pop	r23
 1d2:	6f 91       	pop	r22
 1d4:	5f 91       	pop	r21
 1d6:	2f 91       	pop	r18
 1d8:	0f 90       	pop	r0
 1da:	0f be       	out	0x3f, r0	; 63
 1dc:	0f 90       	pop	r0
 1de:	1f 90       	pop	r1
 1e0:	18 95       	reti

Disassembly of section .text.main:

0000025e <main>:

int main(void)
{
	DDRB = 0xFF; // output
 25e:	8f ef       	ldi	r24, 0xFF	; 255
 260:	87 bb       	out	0x17, r24	; 23
	DDRA = 0xFF; // output
 262:	8a bb       	out	0x1a, r24	; 26
	
	PORTA = 0xFF; // tat ca len 5V
 264:	8b bb       	out	0x1b, r24	; 27
	PORTB = 0x00;
 266:	18 ba       	out	0x18, r1	; 24
	
	init_intr();
 268:	0e 94 4e 01 	call	0x29c	; 0x29c <init_intr>
	
    while(1)
    {	
		clearled();
 26c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <clearled>
		hienthi(i);
 270:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <i>
 274:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <i+0x1>
 278:	0e 94 78 00 	call	0xf0	; 0xf0 <__data_load_end>
 27c:	f7 cf       	rjmp	.-18     	; 0x26c <main+0xe>

Disassembly of section .text.libgcc.div:

0000020e <__divmodhi4>:
 20e:	97 fb       	bst	r25, 7
 210:	07 2e       	mov	r0, r23
 212:	16 f4       	brtc	.+4      	; 0x218 <__divmodhi4+0xa>
 214:	00 94       	com	r0
 216:	07 d0       	rcall	.+14     	; 0x226 <__divmodhi4_neg1>
 218:	77 fd       	sbrc	r23, 7
 21a:	09 d0       	rcall	.+18     	; 0x22e <__divmodhi4_neg2>
 21c:	0e 94 1b 01 	call	0x236	; 0x236 <__udivmodhi4>
 220:	07 fc       	sbrc	r0, 7
 222:	05 d0       	rcall	.+10     	; 0x22e <__divmodhi4_neg2>
 224:	3e f4       	brtc	.+14     	; 0x234 <__divmodhi4_exit>

00000226 <__divmodhi4_neg1>:
 226:	90 95       	com	r25
 228:	81 95       	neg	r24
 22a:	9f 4f       	sbci	r25, 0xFF	; 255
 22c:	08 95       	ret

0000022e <__divmodhi4_neg2>:
 22e:	70 95       	com	r23
 230:	61 95       	neg	r22
 232:	7f 4f       	sbci	r23, 0xFF	; 255

00000234 <__divmodhi4_exit>:
 234:	08 95       	ret

Disassembly of section .text.libgcc.mul:

0000027e <__umulhisi3>:
 27e:	a2 9f       	mul	r26, r18
 280:	b0 01       	movw	r22, r0
 282:	b3 9f       	mul	r27, r19
 284:	c0 01       	movw	r24, r0
 286:	a3 9f       	mul	r26, r19
 288:	70 0d       	add	r23, r0
 28a:	81 1d       	adc	r24, r1
 28c:	11 24       	eor	r1, r1
 28e:	91 1d       	adc	r25, r1
 290:	b2 9f       	mul	r27, r18
 292:	70 0d       	add	r23, r0
 294:	81 1d       	adc	r24, r1
 296:	11 24       	eor	r1, r1
 298:	91 1d       	adc	r25, r1
 29a:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000236 <__udivmodhi4>:
 236:	aa 1b       	sub	r26, r26
 238:	bb 1b       	sub	r27, r27
 23a:	51 e1       	ldi	r21, 0x11	; 17
 23c:	07 c0       	rjmp	.+14     	; 0x24c <__udivmodhi4_ep>

0000023e <__udivmodhi4_loop>:
 23e:	aa 1f       	adc	r26, r26
 240:	bb 1f       	adc	r27, r27
 242:	a6 17       	cp	r26, r22
 244:	b7 07       	cpc	r27, r23
 246:	10 f0       	brcs	.+4      	; 0x24c <__udivmodhi4_ep>
 248:	a6 1b       	sub	r26, r22
 24a:	b7 0b       	sbc	r27, r23

0000024c <__udivmodhi4_ep>:
 24c:	88 1f       	adc	r24, r24
 24e:	99 1f       	adc	r25, r25
 250:	5a 95       	dec	r21
 252:	a9 f7       	brne	.-22     	; 0x23e <__udivmodhi4_loop>
 254:	80 95       	com	r24
 256:	90 95       	com	r25
 258:	bc 01       	movw	r22, r24
 25a:	cd 01       	movw	r24, r26
 25c:	08 95       	ret
