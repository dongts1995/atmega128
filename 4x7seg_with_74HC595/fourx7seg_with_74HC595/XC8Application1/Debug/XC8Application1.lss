
XC8Application1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  0000041f  000004b3  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000004b3  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000048  00000000  00000000  000004e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000d64  00000000  00000000  0000052a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000893  00000000  00000000  0000128e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000420  00000000  00000000  00001b21  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000e8  00000000  00000000  00001f44  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000027d  00000000  00000000  0000202c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000004fe  00000000  00000000  000022a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000038  00000000  00000000  000027a7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000410  00000410  000004a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000027e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.init_intr 0000000c  00000404  00000404  00000498  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.hc595   00000040  000002fa  000002fa  0000038e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.hienthi 0000017e  000000f0  000000f0  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.clearled 00000040  0000033a  0000033a  000003ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_16 0000008c  0000026e  0000026e  00000302  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    0000001c  000003e8  000003e8  0000047c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss.i        00000002  0080010b  0080010b  000004b3  2**0
                  ALLOC
 20 .bss.count    00000002  0080010d  0080010d  000004b3  2**0
                  ALLOC
 21 .data.led     0000000b  00800100  00000414  000004a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 22 .text.libgcc.div 00000028  0000037a  0000037a  0000040e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.libgcc.mul 0000001e  000003ca  000003ca  0000045e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.libgcc.div 00000028  000003a2  000003a2  00000436  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
   4:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
   8:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
   c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  10:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  14:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  18:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  1c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  20:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  24:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  28:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  2c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  30:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  34:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  38:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  3c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  40:	0c 94 37 01 	jmp	0x26e	; 0x26e <__vector_16>
  44:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  48:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  4c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  50:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  54:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  58:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  5c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  60:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  64:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  68:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  6c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  70:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  74:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  78:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  7c:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  80:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  84:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>
  88:	0c 94 08 02 	jmp	0x410	; 0x410 <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 0b       	sbc	r16, r17
  90:	00 04       	cpc	r0, r0
  92:	14 01       	movw	r2, r8
  94:	0b 01       	movw	r0, r22
  96:	0f 80       	ldd	r0, Y+7	; 0x07

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e1       	ldi	r29, 0x10	; 16
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	ec e8       	ldi	r30, 0x8C	; 140
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	19 c0       	rjmp	.+50     	; 0xde <__do_clear_bss+0x8>
  ac:	b7 91       	elpm	r27, Z+
  ae:	a7 91       	elpm	r26, Z+
  b0:	37 91       	elpm	r19, Z+
  b2:	27 91       	elpm	r18, Z+
  b4:	07 91       	elpm	r16, Z+
  b6:	07 fd       	sbrc	r16, 7
  b8:	0e c0       	rjmp	.+28     	; 0xd6 <__do_clear_bss>
  ba:	97 91       	elpm	r25, Z+
  bc:	87 91       	elpm	r24, Z+
  be:	ef 01       	movw	r28, r30
  c0:	f9 2f       	mov	r31, r25
  c2:	e8 2f       	mov	r30, r24
  c4:	0b bf       	out	0x3b, r16	; 59
  c6:	07 90       	elpm	r0, Z+
  c8:	0d 92       	st	X+, r0
  ca:	a2 17       	cp	r26, r18
  cc:	b3 07       	cpc	r27, r19
  ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x22>
  d0:	fe 01       	movw	r30, r28
  d2:	1b be       	out	0x3b, r1	; 59
  d4:	04 c0       	rjmp	.+8      	; 0xde <__do_clear_bss+0x8>

000000d6 <__do_clear_bss>:
  d6:	1d 92       	st	X+, r1
  d8:	a2 17       	cp	r26, r18
  da:	b3 07       	cpc	r27, r19
  dc:	e1 f7       	brne	.-8      	; 0xd6 <__do_clear_bss>
  de:	e8 39       	cpi	r30, 0x98	; 152
  e0:	f4 07       	cpc	r31, r20
  e2:	21 f7       	brne	.-56     	; 0xac <__do_copy_data+0x8>
  e4:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <main>
  e8:	0c 94 76 00 	jmp	0xec	; 0xec <_exit>

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>

Disassembly of section .text:

00000410 <__bad_interrupt>:
 410:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.init_intr:

00000404 <init_intr>:
	//PORTA=led[10];
}

void init_intr()
{
	TCCR0 = (0<<CS01) | (0<<CS01)| (1<<CS00);
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	83 bf       	out	0x33, r24	; 51
	TIMSK=(1<<TOIE0);
 408:	87 bf       	out	0x37, r24	; 55
	TCNT0=0;
 40a:	12 be       	out	0x32, r1	; 50
	sei();
 40c:	78 94       	sei
 40e:	08 95       	ret

Disassembly of section .text.hc595:

000002fa <hc595>:
}

void hc595(uint8_t data)
{
	int temp;
	PORTA=0x00;
 2fa:	1b ba       	out	0x1b, r1	; 27
	for (int i=0; i<8 ;i++)
 2fc:	20 e0       	ldi	r18, 0x00	; 0
 2fe:	30 e0       	ldi	r19, 0x00	; 0
 300:	12 c0       	rjmp	.+36     	; 0x326 <hc595+0x2c>
	{
		temp=data;//<<i;
		temp=temp&0x80;
		if (temp==0x80) PORTA |= 0x01; //DATA = 1;
 302:	88 23       	and	r24, r24
 304:	24 f4       	brge	.+8      	; 0x30e <hc595+0x14>
 306:	9b b3       	in	r25, 0x1b	; 27
 308:	91 60       	ori	r25, 0x01	; 1
 30a:	9b bb       	out	0x1b, r25	; 27
 30c:	03 c0       	rjmp	.+6      	; 0x314 <hc595+0x1a>
		else PORTA &= 0xfe;	// DATA = 0;
 30e:	9b b3       	in	r25, 0x1b	; 27
 310:	9e 7f       	andi	r25, 0xFE	; 254
 312:	9b bb       	out	0x1b, r25	; 27
		PORTA |= 0x02; //CLOCK=0;
 314:	9b b3       	in	r25, 0x1b	; 27
 316:	92 60       	ori	r25, 0x02	; 2
 318:	9b bb       	out	0x1b, r25	; 27
		PORTA &= 0xfd; //CLOCK=1;
 31a:	9b b3       	in	r25, 0x1b	; 27
 31c:	9d 7f       	andi	r25, 0xFD	; 253
 31e:	9b bb       	out	0x1b, r25	; 27
		data<<=1;
 320:	88 0f       	add	r24, r24

void hc595(uint8_t data)
{
	int temp;
	PORTA=0x00;
	for (int i=0; i<8 ;i++)
 322:	2f 5f       	subi	r18, 0xFF	; 255
 324:	3f 4f       	sbci	r19, 0xFF	; 255
 326:	28 30       	cpi	r18, 0x08	; 8
 328:	31 05       	cpc	r19, r1
 32a:	5c f3       	brlt	.-42     	; 0x302 <hc595+0x8>
		else PORTA &= 0xfe;	// DATA = 0;
		PORTA |= 0x02; //CLOCK=0;
		PORTA &= 0xfd; //CLOCK=1;
		data<<=1;
	}
	PORTA |= 0x04; //LATCH=0;
 32c:	8b b3       	in	r24, 0x1b	; 27
 32e:	84 60       	ori	r24, 0x04	; 4
 330:	8b bb       	out	0x1b, r24	; 27
	PORTA &= 0xfb; //LATCH=1;
 332:	8b b3       	in	r24, 0x1b	; 27
 334:	8b 7f       	andi	r24, 0xFB	; 251
 336:	8b bb       	out	0x1b, r24	; 27
 338:	08 95       	ret

Disassembly of section .text.hienthi:

000000f0 <hienthi>:
unsigned char led[11]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff};
int count=0;
int i = 0;
	
void hienthi(unsigned int x)
{
  f0:	ef 92       	push	r14
  f2:	ff 92       	push	r15
  f4:	0f 93       	push	r16
  f6:	1f 93       	push	r17
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	ac 01       	movw	r20, r24
	// Gan cac chu so vao bien ng, tr, ch, dv
	uint16_t temp, ng, tr, ch, dv;
	temp = x;
	dv = temp%10;
  fe:	9c 01       	movw	r18, r24
 100:	ad ec       	ldi	r26, 0xCD	; 205
 102:	bc ec       	ldi	r27, 0xCC	; 204
 104:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__umulhisi3>
 108:	ec 01       	movw	r28, r24
 10a:	d6 95       	lsr	r29
 10c:	c7 95       	ror	r28
 10e:	d6 95       	lsr	r29
 110:	c7 95       	ror	r28
 112:	d6 95       	lsr	r29
 114:	c7 95       	ror	r28
 116:	ce 01       	movw	r24, r28
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	cc 0f       	add	r28, r28
 11e:	dd 1f       	adc	r29, r29
 120:	cc 0f       	add	r28, r28
 122:	dd 1f       	adc	r29, r29
 124:	cc 0f       	add	r28, r28
 126:	dd 1f       	adc	r29, r29
 128:	c8 0f       	add	r28, r24
 12a:	d9 1f       	adc	r29, r25
 12c:	ca 01       	movw	r24, r20
 12e:	8c 1b       	sub	r24, r28
 130:	9d 0b       	sbc	r25, r29
 132:	ec 01       	movw	r28, r24
	temp=temp/10;
 134:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__umulhisi3>
 138:	fc 01       	movw	r30, r24
 13a:	f6 95       	lsr	r31
 13c:	e7 95       	ror	r30
 13e:	f6 95       	lsr	r31
 140:	e7 95       	ror	r30
 142:	f6 95       	lsr	r31
 144:	e7 95       	ror	r30
	ch=temp%10;
 146:	9f 01       	movw	r18, r30
 148:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__umulhisi3>
 14c:	8c 01       	movw	r16, r24
 14e:	16 95       	lsr	r17
 150:	07 95       	ror	r16
 152:	16 95       	lsr	r17
 154:	07 95       	ror	r16
 156:	16 95       	lsr	r17
 158:	07 95       	ror	r16
 15a:	c8 01       	movw	r24, r16
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	00 0f       	add	r16, r16
 162:	11 1f       	adc	r17, r17
 164:	00 0f       	add	r16, r16
 166:	11 1f       	adc	r17, r17
 168:	00 0f       	add	r16, r16
 16a:	11 1f       	adc	r17, r17
 16c:	08 0f       	add	r16, r24
 16e:	19 1f       	adc	r17, r25
 170:	cf 01       	movw	r24, r30
 172:	80 1b       	sub	r24, r16
 174:	91 0b       	sbc	r25, r17
 176:	8c 01       	movw	r16, r24
	temp=temp/10;
 178:	9a 01       	movw	r18, r20
 17a:	36 95       	lsr	r19
 17c:	27 95       	ror	r18
 17e:	36 95       	lsr	r19
 180:	27 95       	ror	r18
 182:	ab e7       	ldi	r26, 0x7B	; 123
 184:	b4 e1       	ldi	r27, 0x14	; 20
 186:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__umulhisi3>
 18a:	fc 01       	movw	r30, r24
 18c:	f6 95       	lsr	r31
 18e:	e7 95       	ror	r30
	tr=temp%10;
 190:	9f 01       	movw	r18, r30
 192:	ad ec       	ldi	r26, 0xCD	; 205
 194:	bc ec       	ldi	r27, 0xCC	; 204
 196:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__umulhisi3>
 19a:	7c 01       	movw	r14, r24
 19c:	f6 94       	lsr	r15
 19e:	e7 94       	ror	r14
 1a0:	f6 94       	lsr	r15
 1a2:	e7 94       	ror	r14
 1a4:	f6 94       	lsr	r15
 1a6:	e7 94       	ror	r14
 1a8:	c7 01       	movw	r24, r14
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	ee 0c       	add	r14, r14
 1b0:	ff 1c       	adc	r15, r15
 1b2:	ee 0c       	add	r14, r14
 1b4:	ff 1c       	adc	r15, r15
 1b6:	ee 0c       	add	r14, r14
 1b8:	ff 1c       	adc	r15, r15
 1ba:	e8 0e       	add	r14, r24
 1bc:	f9 1e       	adc	r15, r25
 1be:	cf 01       	movw	r24, r30
 1c0:	8e 19       	sub	r24, r14
 1c2:	9f 09       	sbc	r25, r15
 1c4:	7c 01       	movw	r14, r24
	temp=temp/10;
 1c6:	9a 01       	movw	r18, r20
 1c8:	36 95       	lsr	r19
 1ca:	27 95       	ror	r18
 1cc:	36 95       	lsr	r19
 1ce:	27 95       	ror	r18
 1d0:	36 95       	lsr	r19
 1d2:	27 95       	ror	r18
 1d4:	a5 ec       	ldi	r26, 0xC5	; 197
 1d6:	b0 e2       	ldi	r27, 0x20	; 32
 1d8:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__umulhisi3>
 1dc:	92 95       	swap	r25
 1de:	82 95       	swap	r24
 1e0:	8f 70       	andi	r24, 0x0F	; 15
 1e2:	89 27       	eor	r24, r25
 1e4:	9f 70       	andi	r25, 0x0F	; 15
 1e6:	89 27       	eor	r24, r25
	ng=temp;
	
	// hien thi led 1
	PORTB=0x00; // chan B0 B1 Xuat ra 0V
 1e8:	18 ba       	out	0x18, r1	; 24
	PORTB=0x01; // Chan B0 xuat ra 5V
 1ea:	21 e0       	ldi	r18, 0x01	; 1
 1ec:	28 bb       	out	0x18, r18	; 24
	hc595(led[ng]);
 1ee:	fc 01       	movw	r30, r24
 1f0:	e0 50       	subi	r30, 0x00	; 0
 1f2:	ff 4f       	sbci	r31, 0xFF	; 255
 1f4:	80 81       	ld	r24, Z
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 7d 01 	call	0x2fa	; 0x2fa <hc595>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1fc:	8f ec       	ldi	r24, 0xCF	; 207
 1fe:	97 e0       	ldi	r25, 0x07	; 7
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <hienthi+0x110>
 204:	00 c0       	rjmp	.+0      	; 0x206 <hienthi+0x116>
 206:	00 00       	nop
	//PORTA=led[ng];
	_delay_ms(1);
	// hien thi led 2
	PORTB=0x02; // Chan B1 xuat ra 5V
 208:	82 e0       	ldi	r24, 0x02	; 2
 20a:	88 bb       	out	0x18, r24	; 24
	hc595(led[tr]);
 20c:	f7 01       	movw	r30, r14
 20e:	e0 50       	subi	r30, 0x00	; 0
 210:	ff 4f       	sbci	r31, 0xFF	; 255
 212:	80 81       	ld	r24, Z
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 7d 01 	call	0x2fa	; 0x2fa <hc595>
 21a:	8f ec       	ldi	r24, 0xCF	; 207
 21c:	97 e0       	ldi	r25, 0x07	; 7
 21e:	01 97       	sbiw	r24, 0x01	; 1
 220:	f1 f7       	brne	.-4      	; 0x21e <hienthi+0x12e>
 222:	00 c0       	rjmp	.+0      	; 0x224 <hienthi+0x134>
 224:	00 00       	nop
	//PORTA=led[tr];
	_delay_ms(1);
	// hien thi led 3
	PORTB=0x04; // Chan B1 xuat ra 5V
 226:	84 e0       	ldi	r24, 0x04	; 4
 228:	88 bb       	out	0x18, r24	; 24
	hc595(led[ch]);
 22a:	f8 01       	movw	r30, r16
 22c:	e0 50       	subi	r30, 0x00	; 0
 22e:	ff 4f       	sbci	r31, 0xFF	; 255
 230:	80 81       	ld	r24, Z
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 7d 01 	call	0x2fa	; 0x2fa <hc595>
 238:	8f ec       	ldi	r24, 0xCF	; 207
 23a:	97 e0       	ldi	r25, 0x07	; 7
 23c:	01 97       	sbiw	r24, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <hienthi+0x14c>
 240:	00 c0       	rjmp	.+0      	; 0x242 <hienthi+0x152>
 242:	00 00       	nop
	//PORTA=led[ch];
	_delay_ms(1);
	// hien thi led 4
	PORTB=0x08; // Chan B1 xuat ra 5V
 244:	88 e0       	ldi	r24, 0x08	; 8
 246:	88 bb       	out	0x18, r24	; 24
	hc595(led[dv]);
 248:	c0 50       	subi	r28, 0x00	; 0
 24a:	df 4f       	sbci	r29, 0xFF	; 255
 24c:	88 81       	ld	r24, Y
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	0e 94 7d 01 	call	0x2fa	; 0x2fa <hc595>
 254:	8f ec       	ldi	r24, 0xCF	; 207
 256:	97 e0       	ldi	r25, 0x07	; 7
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <hienthi+0x168>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <hienthi+0x16e>
 25e:	00 00       	nop
	//PORTA=led[dv];
	_delay_ms(1);
	
}
 260:	df 91       	pop	r29
 262:	cf 91       	pop	r28
 264:	1f 91       	pop	r17
 266:	0f 91       	pop	r16
 268:	ff 90       	pop	r15
 26a:	ef 90       	pop	r14
 26c:	08 95       	ret

Disassembly of section .text.clearled:

0000033a <clearled>:

void clearled()
{
 33a:	cf 93       	push	r28
 33c:	df 93       	push	r29
	// hien thi led 1
	PORTB=0x00; // chan B0 B1 Xuat ra 0V
 33e:	18 ba       	out	0x18, r1	; 24
	PORTB=0x01; // Chan B0 xuat ra 5V
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	88 bb       	out	0x18, r24	; 24
	hc595(led[10]);
 344:	c0 e0       	ldi	r28, 0x00	; 0
 346:	d1 e0       	ldi	r29, 0x01	; 1
 348:	8a 85       	ldd	r24, Y+10	; 0x0a
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 7d 01 	call	0x2fa	; 0x2fa <hc595>
	//PORTA=led[10];
	// hien thi led 2
	PORTB=0x02; // Chan B1 xuat ra 5V
 350:	82 e0       	ldi	r24, 0x02	; 2
 352:	88 bb       	out	0x18, r24	; 24
	hc595(led[10]);
 354:	8a 85       	ldd	r24, Y+10	; 0x0a
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	0e 94 7d 01 	call	0x2fa	; 0x2fa <hc595>
	//PORTA=led[10];
	// hien thi led 3
	PORTB=0x04; // Chan B1 xuat ra 5V
 35c:	84 e0       	ldi	r24, 0x04	; 4
 35e:	88 bb       	out	0x18, r24	; 24
	hc595(led[10]);
 360:	8a 85       	ldd	r24, Y+10	; 0x0a
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	0e 94 7d 01 	call	0x2fa	; 0x2fa <hc595>
	//PORTA=led[10];
	// hien thi led 4
	PORTB=0x08; // Chan B1 xuat ra 5V
 368:	88 e0       	ldi	r24, 0x08	; 8
 36a:	88 bb       	out	0x18, r24	; 24
	hc595(led[10]);
 36c:	8a 85       	ldd	r24, Y+10	; 0x0a
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	0e 94 7d 01 	call	0x2fa	; 0x2fa <hc595>
	//PORTA=led[10];
}
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	08 95       	ret

Disassembly of section .text.__vector_16:

0000026e <__vector_16>:
	TCNT0=0;
	sei();
}

ISR(TIMER0_OVF_vect)
{
 26e:	1f 92       	push	r1
 270:	0f 92       	push	r0
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	0f 92       	push	r0
 276:	11 24       	eor	r1, r1
 278:	0b b6       	in	r0, 0x3b	; 59
 27a:	0f 92       	push	r0
 27c:	2f 93       	push	r18
 27e:	3f 93       	push	r19
 280:	4f 93       	push	r20
 282:	5f 93       	push	r21
 284:	6f 93       	push	r22
 286:	7f 93       	push	r23
 288:	8f 93       	push	r24
 28a:	9f 93       	push	r25
 28c:	af 93       	push	r26
 28e:	bf 93       	push	r27
 290:	ef 93       	push	r30
 292:	ff 93       	push	r31
	TCNT0=0;
 294:	12 be       	out	0x32, r1	; 50
	count++;
 296:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <count>
 29a:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <count+0x1>
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <count+0x1>
 2a4:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <count>
	if(count > 1000)
 2a8:	89 3e       	cpi	r24, 0xE9	; 233
 2aa:	93 40       	sbci	r25, 0x03	; 3
 2ac:	9c f0       	brlt	.+38     	; 0x2d4 <__vector_16+0x66>
	{
		i++;
 2ae:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <i>
 2b2:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <i+0x1>
 2b6:	01 96       	adiw	r24, 0x01	; 1
		i=i%10000;
 2b8:	60 e1       	ldi	r22, 0x10	; 16
 2ba:	77 e2       	ldi	r23, 0x27	; 39
 2bc:	0e 94 bd 01 	call	0x37a	; 0x37a <__divmodhi4>
 2c0:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <i+0x1>
 2c4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <i>
		count=0;
 2c8:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <count+0x1>
 2cc:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <count>
		clearled();
 2d0:	0e 94 9d 01 	call	0x33a	; 0x33a <clearled>
	}
}
 2d4:	ff 91       	pop	r31
 2d6:	ef 91       	pop	r30
 2d8:	bf 91       	pop	r27
 2da:	af 91       	pop	r26
 2dc:	9f 91       	pop	r25
 2de:	8f 91       	pop	r24
 2e0:	7f 91       	pop	r23
 2e2:	6f 91       	pop	r22
 2e4:	5f 91       	pop	r21
 2e6:	4f 91       	pop	r20
 2e8:	3f 91       	pop	r19
 2ea:	2f 91       	pop	r18
 2ec:	0f 90       	pop	r0
 2ee:	0b be       	out	0x3b, r0	; 59
 2f0:	0f 90       	pop	r0
 2f2:	0f be       	out	0x3f, r0	; 63
 2f4:	0f 90       	pop	r0
 2f6:	1f 90       	pop	r1
 2f8:	18 95       	reti

Disassembly of section .text.main:

000003e8 <main>:
	//_delay_ms(1);
}

int main(void)
{
	DDRB = 0xFF; // output
 3e8:	8f ef       	ldi	r24, 0xFF	; 255
 3ea:	87 bb       	out	0x17, r24	; 23
	DDRA = 0xFF; // output
 3ec:	8a bb       	out	0x1a, r24	; 26
	
	PORTA = 0xFF; // tat ca len 5V
 3ee:	8b bb       	out	0x1b, r24	; 27
	PORTB = 0x00;
 3f0:	18 ba       	out	0x18, r1	; 24
	
	init_intr();
 3f2:	0e 94 02 02 	call	0x404	; 0x404 <init_intr>
	//hc595(0b01010101);
	
    while(1)
    {	
		hienthi(i);
 3f6:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <i>
 3fa:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <i+0x1>
 3fe:	0e 94 78 00 	call	0xf0	; 0xf0 <__data_load_end>
 402:	f9 cf       	rjmp	.-14     	; 0x3f6 <main+0xe>

Disassembly of section .text.libgcc.div:

0000037a <__divmodhi4>:
 37a:	97 fb       	bst	r25, 7
 37c:	07 2e       	mov	r0, r23
 37e:	16 f4       	brtc	.+4      	; 0x384 <__divmodhi4+0xa>
 380:	00 94       	com	r0
 382:	07 d0       	rcall	.+14     	; 0x392 <__divmodhi4_neg1>
 384:	77 fd       	sbrc	r23, 7
 386:	09 d0       	rcall	.+18     	; 0x39a <__divmodhi4_neg2>
 388:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__udivmodhi4>
 38c:	07 fc       	sbrc	r0, 7
 38e:	05 d0       	rcall	.+10     	; 0x39a <__divmodhi4_neg2>
 390:	3e f4       	brtc	.+14     	; 0x3a0 <__divmodhi4_exit>

00000392 <__divmodhi4_neg1>:
 392:	90 95       	com	r25
 394:	81 95       	neg	r24
 396:	9f 4f       	sbci	r25, 0xFF	; 255
 398:	08 95       	ret

0000039a <__divmodhi4_neg2>:
 39a:	70 95       	com	r23
 39c:	61 95       	neg	r22
 39e:	7f 4f       	sbci	r23, 0xFF	; 255

000003a0 <__divmodhi4_exit>:
 3a0:	08 95       	ret

Disassembly of section .text.libgcc.mul:

000003ca <__umulhisi3>:
 3ca:	a2 9f       	mul	r26, r18
 3cc:	b0 01       	movw	r22, r0
 3ce:	b3 9f       	mul	r27, r19
 3d0:	c0 01       	movw	r24, r0
 3d2:	a3 9f       	mul	r26, r19
 3d4:	70 0d       	add	r23, r0
 3d6:	81 1d       	adc	r24, r1
 3d8:	11 24       	eor	r1, r1
 3da:	91 1d       	adc	r25, r1
 3dc:	b2 9f       	mul	r27, r18
 3de:	70 0d       	add	r23, r0
 3e0:	81 1d       	adc	r24, r1
 3e2:	11 24       	eor	r1, r1
 3e4:	91 1d       	adc	r25, r1
 3e6:	08 95       	ret

Disassembly of section .text.libgcc.div:

000003a2 <__udivmodhi4>:
 3a2:	aa 1b       	sub	r26, r26
 3a4:	bb 1b       	sub	r27, r27
 3a6:	51 e1       	ldi	r21, 0x11	; 17
 3a8:	07 c0       	rjmp	.+14     	; 0x3b8 <__udivmodhi4_ep>

000003aa <__udivmodhi4_loop>:
 3aa:	aa 1f       	adc	r26, r26
 3ac:	bb 1f       	adc	r27, r27
 3ae:	a6 17       	cp	r26, r22
 3b0:	b7 07       	cpc	r27, r23
 3b2:	10 f0       	brcs	.+4      	; 0x3b8 <__udivmodhi4_ep>
 3b4:	a6 1b       	sub	r26, r22
 3b6:	b7 0b       	sbc	r27, r23

000003b8 <__udivmodhi4_ep>:
 3b8:	88 1f       	adc	r24, r24
 3ba:	99 1f       	adc	r25, r25
 3bc:	5a 95       	dec	r21
 3be:	a9 f7       	brne	.-22     	; 0x3aa <__udivmodhi4_loop>
 3c0:	80 95       	com	r24
 3c2:	90 95       	com	r25
 3c4:	bc 01       	movw	r22, r24
 3c6:	cd 01       	movw	r24, r26
 3c8:	08 95       	ret
