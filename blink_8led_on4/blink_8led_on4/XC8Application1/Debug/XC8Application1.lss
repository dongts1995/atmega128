
XC8Application1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002f9  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000002f9  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000002f9  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b17  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007da  00000000  00000000  00000e7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002de  00000000  00000000  00001659  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ac  00000000  00000000  00001938  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000027d  00000000  00000000  000019e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000cb  00000000  00000000  00001c61  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000260  00000260  000002f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001d5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.led_init 00000008  00000258  00000258  000002ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.LED_OUT 0000000c  00000242  00000242  000002d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.set_timer0 0000000e  00000234  00000234  000002c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    0000000a  0000024e  0000024e  000002e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_16 00000144  000000f0  000000f0  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss.i        00000002  00800101  00800101  000002f9  2**0
                  ALLOC
 20 .bss.chieu_dich 00000002  00800103  00800103  000002f9  2**0
                  ALLOC
 21 .bss.count    00000002  00800105  00800105  000002f9  2**0
                  ALLOC
 22 .data.led1    00000001  00800107  00000264  000002f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
   4:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
   8:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
   c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  10:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  14:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  18:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  1c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  20:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  24:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  28:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  2c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  30:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  34:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  38:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  3c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  40:	0c 94 78 00 	jmp	0xf0	; 0xf0 <_etext>
  44:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  48:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  4c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  50:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  54:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  58:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  5c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  60:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  64:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  68:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  6c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  70:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  74:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  78:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  7c:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  80:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  84:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>
  88:	0c 94 30 01 	jmp	0x260	; 0x260 <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 07       	cpc	r16, r17
  90:	80 01       	movw	r16, r0
  92:	07 01       	movw	r0, r14
  94:	08 00       	.word	0x0008	; ????
  96:	02 64       	ori	r16, 0x42	; 66

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e1       	ldi	r29, 0x10	; 16
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	ec e8       	ldi	r30, 0x8C	; 140
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	19 c0       	rjmp	.+50     	; 0xde <__do_clear_bss+0x8>
  ac:	b7 91       	elpm	r27, Z+
  ae:	a7 91       	elpm	r26, Z+
  b0:	37 91       	elpm	r19, Z+
  b2:	27 91       	elpm	r18, Z+
  b4:	07 91       	elpm	r16, Z+
  b6:	07 fd       	sbrc	r16, 7
  b8:	0e c0       	rjmp	.+28     	; 0xd6 <__do_clear_bss>
  ba:	97 91       	elpm	r25, Z+
  bc:	87 91       	elpm	r24, Z+
  be:	ef 01       	movw	r28, r30
  c0:	f9 2f       	mov	r31, r25
  c2:	e8 2f       	mov	r30, r24
  c4:	0b bf       	out	0x3b, r16	; 59
  c6:	07 90       	elpm	r0, Z+
  c8:	0d 92       	st	X+, r0
  ca:	a2 17       	cp	r26, r18
  cc:	b3 07       	cpc	r27, r19
  ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0x22>
  d0:	fe 01       	movw	r30, r28
  d2:	1b be       	out	0x3b, r1	; 59
  d4:	04 c0       	rjmp	.+8      	; 0xde <__do_clear_bss+0x8>

000000d6 <__do_clear_bss>:
  d6:	1d 92       	st	X+, r1
  d8:	a2 17       	cp	r26, r18
  da:	b3 07       	cpc	r27, r19
  dc:	e1 f7       	brne	.-8      	; 0xd6 <__do_clear_bss>
  de:	e8 39       	cpi	r30, 0x98	; 152
  e0:	f4 07       	cpc	r31, r20
  e2:	21 f7       	brne	.-56     	; 0xac <__do_copy_data+0x8>
  e4:	0e 94 27 01 	call	0x24e	; 0x24e <main>
  e8:	0c 94 76 00 	jmp	0xec	; 0xec <_exit>

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>

Disassembly of section .text:

00000260 <__bad_interrupt>:
 260:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.led_init:

00000258 <led_init>:
		}*/
	}
}
void led_init()
{
	DDRB=0xF0;
 258:	80 ef       	ldi	r24, 0xF0	; 240
 25a:	87 bb       	out	0x17, r24	; 23
	DDRD=0xF0;
 25c:	81 bb       	out	0x11, r24	; 17
 25e:	08 95       	ret

Disassembly of section .text.LED_OUT:

00000242 <LED_OUT>:
}

void LED_OUT(uint8_t led)
{
	PORTB=led << 4;
 242:	98 2f       	mov	r25, r24
 244:	92 95       	swap	r25
 246:	90 7f       	andi	r25, 0xF0	; 240
 248:	98 bb       	out	0x18, r25	; 24
	PORTD=led;
 24a:	82 bb       	out	0x12, r24	; 18
 24c:	08 95       	ret

Disassembly of section .text.set_timer0:

00000234 <set_timer0>:
}

void set_timer0()
{
	TCCR0=(0<<CS2) | (1<<CS1) | (1<<CS0) ;
 234:	83 e0       	ldi	r24, 0x03	; 3
 236:	83 bf       	out	0x33, r24	; 51
	TIMSK|= (1<<TOIE0);
 238:	87 b7       	in	r24, 0x37	; 55
 23a:	81 60       	ori	r24, 0x01	; 1
 23c:	87 bf       	out	0x37, r24	; 55
	sei();
 23e:	78 94       	sei
 240:	08 95       	ret

Disassembly of section .text.main:

0000024e <main>:
int chieu_dich = 0;
int i = 0;

int main(void)
{
	led_init();
 24e:	0e 94 2c 01 	call	0x258	; 0x258 <led_init>
	set_timer0();
 252:	0e 94 1a 01 	call	0x234	; 0x234 <set_timer0>
 256:	ff cf       	rjmp	.-2      	; 0x256 <main+0x8>

Disassembly of section .text.__vector_16:

000000f0 <__vector_16>:
	TIMSK|= (1<<TOIE0);
	sei();
}

ISR(TIMER0_OVF_vect)
{
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	0b b6       	in	r0, 0x3b	; 59
  fc:	0f 92       	push	r0
  fe:	2f 93       	push	r18
 100:	3f 93       	push	r19
 102:	4f 93       	push	r20
 104:	5f 93       	push	r21
 106:	6f 93       	push	r22
 108:	7f 93       	push	r23
 10a:	8f 93       	push	r24
 10c:	9f 93       	push	r25
 10e:	af 93       	push	r26
 110:	bf 93       	push	r27
 112:	ef 93       	push	r30
 114:	ff 93       	push	r31
	if(count<30)
 116:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <count>
 11a:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <count+0x1>
 11e:	8e 31       	cpi	r24, 0x1E	; 30
 120:	91 05       	cpc	r25, r1
 122:	34 f4       	brge	.+12     	; 0x130 <__vector_16+0x40>
	{
		count++;
 124:	01 96       	adiw	r24, 0x01	; 1
 126:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <count+0x1>
 12a:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <count>
 12e:	6f c0       	rjmp	.+222    	; 0x20e <__vector_16+0x11e>
	}
	else
	{
		if(chieu_dich == 0)
 130:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <chieu_dich>
 134:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <chieu_dich+0x1>
 138:	89 2b       	or	r24, r25
 13a:	d9 f5       	brne	.+118    	; 0x1b2 <__vector_16+0xc2>
		{
			if(i < 3)
 13c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_end>
 140:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <_end+0x1>
 144:	83 30       	cpi	r24, 0x03	; 3
 146:	91 05       	cpc	r25, r1
 148:	a4 f4       	brge	.+40     	; 0x172 <__vector_16+0x82>
			{
				led3 = led1 >> (3-i);
 14a:	43 e0       	ldi	r20, 0x03	; 3
 14c:	50 e0       	ldi	r21, 0x00	; 0
 14e:	48 1b       	sub	r20, r24
 150:	59 0b       	sbc	r21, r25
 152:	20 91 07 01 	lds	r18, 0x0107	; 0x800107 <led1>
 156:	30 e0       	ldi	r19, 0x00	; 0
 158:	02 c0       	rjmp	.+4      	; 0x15e <__vector_16+0x6e>
 15a:	35 95       	asr	r19
 15c:	27 95       	ror	r18
 15e:	4a 95       	dec	r20
 160:	e2 f7       	brpl	.-8      	; 0x15a <__vector_16+0x6a>
 162:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <_edata>
				i++;
 166:	01 96       	adiw	r24, 0x01	; 1
 168:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <_end+0x1>
 16c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <_end>
 170:	20 c0       	rjmp	.+64     	; 0x1b2 <__vector_16+0xc2>
			}
			else if(i < 8)
 172:	88 30       	cpi	r24, 0x08	; 8
 174:	91 05       	cpc	r25, r1
 176:	8c f4       	brge	.+34     	; 0x19a <__vector_16+0xaa>
			{
				led3 = led1 << (i-3);
 178:	ac 01       	movw	r20, r24
 17a:	43 50       	subi	r20, 0x03	; 3
 17c:	51 09       	sbc	r21, r1
 17e:	20 91 07 01 	lds	r18, 0x0107	; 0x800107 <led1>
 182:	01 c0       	rjmp	.+2      	; 0x186 <__vector_16+0x96>
 184:	22 0f       	add	r18, r18
 186:	4a 95       	dec	r20
 188:	ea f7       	brpl	.-6      	; 0x184 <__vector_16+0x94>
 18a:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <_edata>
				i++;
 18e:	01 96       	adiw	r24, 0x01	; 1
 190:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <_end+0x1>
 194:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <_end>
 198:	0c c0       	rjmp	.+24     	; 0x1b2 <__vector_16+0xc2>
			}
			else
			{
				chieu_dich = 1;
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <chieu_dich+0x1>
 1a2:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <chieu_dich>
				i = 7;
 1a6:	87 e0       	ldi	r24, 0x07	; 7
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <_end+0x1>
 1ae:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <_end>
			}
			
		}
		if(chieu_dich == 1)
 1b2:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <chieu_dich>
 1b6:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <chieu_dich+0x1>
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	01 f5       	brne	.+64     	; 0x1fe <__vector_16+0x10e>
		{
			if(i>0)
 1be:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_end>
 1c2:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <_end+0x1>
 1c6:	18 16       	cp	r1, r24
 1c8:	19 06       	cpc	r1, r25
 1ca:	8c f4       	brge	.+34     	; 0x1ee <__vector_16+0xfe>
			{
				led3>>=1;
 1cc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1d0:	86 95       	lsr	r24
 1d2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
				LED_OUT(led3);
 1d6:	0e 94 21 01 	call	0x242	; 0x242 <LED_OUT>
				i--;
 1da:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_end>
 1de:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <_end+0x1>
 1e2:	01 97       	sbiw	r24, 0x01	; 1
 1e4:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <_end+0x1>
 1e8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <_end>
 1ec:	08 c0       	rjmp	.+16     	; 0x1fe <__vector_16+0x10e>
			}
			else 
			{
				chieu_dich = 0;
 1ee:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <chieu_dich+0x1>
 1f2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <chieu_dich>
				i = 0;
 1f6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_end+0x1>
 1fa:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_end>
			}
		}
		LED_OUT(led3);
 1fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 202:	0e 94 21 01 	call	0x242	; 0x242 <LED_OUT>
		count = 0;
 206:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <count+0x1>
 20a:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <count>
	}
 20e:	ff 91       	pop	r31
 210:	ef 91       	pop	r30
 212:	bf 91       	pop	r27
 214:	af 91       	pop	r26
 216:	9f 91       	pop	r25
 218:	8f 91       	pop	r24
 21a:	7f 91       	pop	r23
 21c:	6f 91       	pop	r22
 21e:	5f 91       	pop	r21
 220:	4f 91       	pop	r20
 222:	3f 91       	pop	r19
 224:	2f 91       	pop	r18
 226:	0f 90       	pop	r0
 228:	0b be       	out	0x3b, r0	; 59
 22a:	0f 90       	pop	r0
 22c:	0f be       	out	0x3f, r0	; 63
 22e:	0f 90       	pop	r0
 230:	1f 90       	pop	r1
 232:	18 95       	reti
